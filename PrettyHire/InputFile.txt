ControlTree Architecture_architecture (ArchName (Name "Arch")) Of_of (EntityName (Name "vhdl_test")) Is_is (CodeBody Begin_begin [StmLogicBranch (LogicBranchCaseStatement (CaseStatement Case_CASE (Key (Name "a")) Is_IS [CaseWhen When_WHEN (TypeBitString (BitString "\"00\"")) MapTo [StmLogicBranch (LogicBranchIfStatement (IfElse If_IF (Condition (EEqual (EType (TypeName (Name "b"))) (EType (TypeBitString (BitString "\"00\""))))) Then_THEN [StmAssign (AVar (Name "dummy") (EType (TypeName (Name "b"))))] (ElseStatement El_ELSE [StmAssign (AVar (Name "dummy") (EType (TypeName (Name "c"))))]) (EndBlock1 End_END (EndingWordIf If_IF) EndingID1)))],CaseWhen When_WHEN (TypeBitString (BitString "\"01\"")) MapTo [StmLogicBranch (LogicBranchIfStatement (IfElse If_IF (Condition (EEqual (EType (TypeName (Name "b"))) (EType (TypeBitString (BitString "\"01\""))))) Then_THEN [StmAssign (AVar (Name "dummy") (EType (TypeName (Name "c"))))] (ElseStatement El_ELSE [StmAssign (AVar (Name "dummy") (EType (TypeName (Name "b"))))]) (EndBlock1 End_END (EndingWordIf If_IF) EndingID1))),StmLogicBranch (LogicBranchIfStatement (IfElseIf_IF (Condition (EEqual (EType (TypeName (Name "c"))) (EType (TypeBitString (BitString "\"10\"")))))Then_THEN [StmAssign (AVar (Name "dummy") (EType (TypeFunctionCall (FunctionCall (Name "std_logic_vector") (EAdd (EType (TypeFunctionCall (FunctionCall (Name "unsigned") (EType (TypeName (Name "dummy")))))) (EType (TypeInteger 1)))))))] (ElseStatement El_ELSE [StmAssign (AVar (Name "dummy") (EType (TypeFunctionCall (FunctionCall (Name "std_logic_vector") (ESub (EType (TypeFunctionCall (FunctionCall (Name"unsigned") (EType (TypeName (Name "dummy")))))) (EType (TypeInteger 1)))))))]) (EndBlock1 End_END (EndingWordIf If_IF) EndingID1)))],CaseWhen When_WHEN (TypeOthers Others_OTHERS) MapTo [StmLogicBranch (LogicBranchIfStatement (IfElse If_IF (Condition (EEqual (EType (TypeName (Name "c"))) (EType (TypeBitString (BitString "\"11\""))))) Then_THEN [StmAssign (AVar (Name "dummy") (EType (TypeName (Name "a"))))] (ElseStatement El_ELSE [StmAssign (AVar (Name "dummy") (EType (TypeName (Name "b"))))]) (EndBlock1 End_END (EndingWordIf If_IF) EndingID1)))]] (EndBlock1 End_END (EndingWordCase Case_CASE) EndingID1))),StmAssign (ANext (Name "d") (EType (TypeName (Name "dummy")))),StmLogicBranch (LogicBranchIfStatement(IfElse If_if (Condition (EEqual (EType (TypeName (Name "b"))) (EType (TypeBitString (BitString "\"00\""))))) Then_THEN [StmAssign (AVar (Name "dummy") (EType (TypeName (Name "b"))))] (ElseStatement El_ELSE [StmAssign (AVar (Name "dummy") (EType (TypeName (Name "c"))))]) (EndBlock1 End_END (EndingWordIf If_IF) EndingID1))),StmLogicBranch (LogicBranchIfStatement (IfElifElse If_if (Condition (EEqual (EType(TypeName (Name "sel1"))) (EType (TypeBit (Bit "'1'"))))) Then_then [StmAssign (ANext (Name "out") (EType (TypeName (Name "x"))))] [EleifStatement ElIf_elsif (Condition (EEqual (EType (TypeName (Name "b"))) (EType (TypeBitString (BitString "\"00\""))))) Then_then [StmLogicBranch (LogicBranchIfStatement (IfElse If_if (Condition (EEqual (EType (TypeName (Name "sel2"))) (EType (TypeBit (Bit "'1'"))))) Then_then [StmAssign (ANext (Name "out") (EType (TypeName (Name "z"))))] (ElseStatement El_else [StmAssign (ANext (Name "out") (EType (TypeName (Name "y"))))]) (EndBlock1 End_end (EndingWordIf If_if) EndingID1)))]] (ElseStatement El_else [StmAssign (ANext (Name "out") (EType (TypeName (Name "y"))))]) (EndBlock1 End_end (EndingWordIf If_if) EndingID1)))] (EndBlock1 End_end EndingWord1 (EndingIDName (Name "Arch"))))